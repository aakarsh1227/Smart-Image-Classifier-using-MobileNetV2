# -*- coding: utf-8 -*-
"""Smart Image Classifier using MobileNetV2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h-OT92KiWt45u-m-GysnqFT4qJqJh5gs
"""

!pip install -q tensorflow pillow

import numpy as np
from PIL import Image
from tensorflow.keras.applications.mobilenet_v2 import MobileNetV2, preprocess_input, decode_predictions
from tensorflow.keras.preprocessing import image
import tensorflow as tf
from google.colab import files
import io
from IPython.display import display, Image as IPImage

# Load the pre-trained MobileNetV2 model
model = MobileNetV2(weights='imagenet')

def predict_image(img):
    img = img.resize((224, 224))
    img_array = image.img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)
    img_array = preprocess_input(img_array)

    preds = model.predict(img_array)
    top_preds = decode_predictions(preds, top=3)[0]

    print(f"\nüîç Top Predictions:")
    for pred in top_preds:
        print(f"{pred[1]}: {pred[2]*100:.2f}%")

# Upload image from local system
uploaded = files.upload()

for fname in uploaded.keys():
    img = Image.open(io.BytesIO(uploaded[fname])).convert('RGB')
    display(img)
    predict_image(img)

